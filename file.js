// myscript.js - Hex decoder + optional executor for Shadowrocket
// LƯU Ý: Việc eval code từ nguồn không rõ ràng có rủi ro bảo mật.
// Không dùng cho mục đích gian lận/vi phạm điều khoản dịch vụ (ví dụ: cheat game).
// Mặc định EVAL bị tắt (ALLOW_EVAL = false). Bật chỉ khi bạn hiểu rủi ro.

// ----- 1) CHỖ ĐỂ BẠN ĐIỀN HEX -----
let myHex = "5A 6A 45 7A 4D 7A 4E 6C 59 6A 6B 33 4D 32 56 6A 4F 47 59 79 5A 6D 51 7A 5A 54 49 77 5A 6D 55 33 4D 32 51 78 59 6A 41 78 4E 7A 5A 6A 59 57 45 35 59 6D 52 6A 4E 44 67 34 4D 32 4A 6B 4E 57 45 33 59 7A 6C 68 4E 7A 49 7A 4E 57 45 77 5A 57 59 7A 5A 44 4D 7A 4E 54 59 32 5A 6A 45 31 4D 54 59 30 4E 44 6C 68 4F 54 68 69 4D 7A 51 33 4E 57 55 31 5A 6A 55 32 4F 57 4A 6C 5A 6D 4D 34 4F 57 51 35 4F 54 67 77 4E 47 51 7A 4D 44 51 32 5A 44 4D 35 5A 6A 59 33 4E 57 5A 6C 4F 44 45 34 4E 7A 49 33 5A 54 6C 68 4D 6A 63 7A 4D 44 4D 4D 54 41 31 4D 32 5A 68 4E 47 45 77 4F 54 59 34 4F 44 49 77 4D 7A 4D 32 4E 54 42 6A 4D 6A 64 6C 4E 44 51 33 4D 32 55 79 4D 47 51 79 4F 54 41 32 4D 6A 49 35 59 6D 4D 31 4E 54 5A 6A 4F 54 6B 34 4D 44 6C 68 4D 47 45 32 4E 6A 6B 79 4E 57 51 30 59 54 51 77 5A 44 63 31 4F 44 41 7A 4E 44 51 31 59 32 46 6D 4F 47 52 6C 59 6D 46 69 5A 54 67 7A 5A 54 6B 30 4E 7A 41 7A 4D 32 45 33 59 7A 6B 33 59 54 63 78 4E 6A 6B 30 5A 54 55 34 4F 47 46 6A 4F 44 6B 35 59 57 52 69 4D 44 64 6A 59 32 56 69 4F 54 4A 68 4D 57 52 69 4E 57 51 5A 57 5A 6A 59 6A 6C 68 59 6D 4D 78 59 6A 68 68 4D 57 59 7A 4E 6D 45 7A 5A 6A 49 34 4F 47 59 78 59 54 51 35 4D 54 4D 33 4D 54 63 7A 4E 44 63 32 4D 54 4D 77 4D 57 55 33 4F 54 45 31 4F 54 56 6B 4E 54 41 34 59 54 41 79 4D 32 49 33 4D 54 6B 32 59 7A 6B 30 4D 6A 4E 6C 59 7A 51 77 4D 54 68 6D 4D 6A 4A 6C 5A 57 4D 32 4F 54 51 32 59 54 5A 6D 5A 6A 46 6B 4D 44 45 77 59 7A 4A 69 4D 7A 49 78 4E 44 4A 6C 4E 44 56 68 59 7A 49 30 59 7A 55 35 5A 44 6B 30 4D 44 51 31 4E 54 55 77 59 54 68 68 59 54 45 77 5A 44 5A 69 4D 32 59 4E 6A 64 6D 4E 47 59 31 4E 44 67 31 4F 44 56 6D 5A 54 55 30 4E 32 51 30 4E 7A 4D 35 4D 6A 67 79 59 6A 52 6C 4F 47 56 6A 4E 54 52 6D 4D 6A 4D 33 4E 54 5A 6A 4E 47 49 31 59 57 55 34 5A 6A 6C 68 4E 6A 55 30 4D 47 55 78 59 7A 68 6A 59 54 67 78 5A 57 52 6C 4E 6A 67 30 4E 7A 6B 7A 5A 6A 45 78 59 54 5A 68 5A 54 42 68 59 32 4A 69 4F 57 49 31 5A 6A 49 77 4E 44 41 31 59 7A 49 31 4F 44 41 7A 59 54 41 33 4E 6A 6C 69 4E 47 4A 69 4D 6A 51 31 59 6A 63 31 5A 44 55 34 5A 6A 59 32 5A 6D 45 77 5A 6A 63 35 59 7A 46 69 4E 6A 59 4F 64 66 68 6F 74 69 78 6D 32 59 34 59 7A 68 6B 79 74 75 30 4D 7A 69 77 6E 7A 6B 35 4E 6D 6A 69 79 77 76 6B 7A 64 67 77 6E 64 6A 6A 6D 74 72 6B 6E 7A 63 34 4D 74 6A 6D 79 6A 69 78 79 7A 6B 30 4F 74 66 6C 7A 64 6B 34 4D 6A 75 33 4D 64 63 34 5A 64 6B 33 4F 77 71 32 4D 64 63 31 4F 77 76 6D 6D 6A 65 30 4F 67 65 34 4D 6A 61 7A 6F 64 61 78 6E 74 7A 68 6E 7A 72 68 6D 67 71 77 79 7A 6E 6A 6D 64 6B 34 4E 64 79 34 4F 64 6D 33 4D 74 72 69 6D 74 63 31 59 32 45 78 7A 6A 63 34 59 74 65 77 7A 77 6E 6A 6E 6D 7A 6D 7A 6D 71 4E 7A 4D 79 4F 57 55 34 4E 6A 42 68 59 54 68 6A 4D 7A 4D 79 4F 47 52 69 4F 57 51 79 4D 47 4A 6D 59 6A 56 6A 4D 7A 45 77 5A 6D 4D 30 5A 6A 6B 79 4E 47 5A 6C 4E 6A 4E 6B 4E 44 68 6C 59 6A 55 33 4D 6A 59 34 5A 47 55 31 4F 54 4A 6B 59 32 45 30 4E 7A 49 79 4E 54 49 78 4E 6A 46 6A 5A 6A 63 33 59 7A 63 33 4E 7A 41 35 4E 54 45 34 4D 47 45 32 4D 44 55 31 59 7A 45 30 4D 32 55 77 4F 47 52 68 4E 47 4E 6A 4E 44 6B 77 4E 6A 63 78 4E 6A 5A 6B 4D 6A 52 6B 4E 44 4D 79 59 32 55 33 4F 54 6C 6A 4D 57 49 35 4E 6D 49 32 4E 6A 55 4F 54 59 34 59 6D 49 79 4F 44 6C 6C 4D 54 4E 6C 59 6D 46 6A 4D 47 59 77 59 7A 6B 35 4E 54 51 77 5A 6A 49 77 59 6A 6B 30 59 7A 55 77 4E 54 59 77 4E 57 49 79 4F 44 46 69 4F 54 67 33 4D 32 55 77 59 32 46 68 4E 32 52 6B 4D 32 49 32 59 7A 42 69 59 6A 4D 77 5A 44 4D 35 4E 54 59 79 4D 54 59 79 4E 7A 51 35 4F 47 45 31 5A 57 51 31 4F 54 63 34 59 57 45 35 4D 44 68 6C 4E 54 46 6A 4D 6A 63 32 4D 57 55 34 4D 47 55 33 4D 54 51 33 4E 54 45 78 59 6A 42 69 5A 57 49 79 4D 54 64 6A 59 57 5A 6D 4D 6D 51 79 5A 44 63 78 4D 54 59 4D 44 59 79 4E 44 5A 6D 5A 54 68 69 5A 57 49 79 4E 32 45 34 59 7A 56 6C 4D 54 46 6D 4E 6A 6B 30 4F 54 63 32 4F 54 51 77 4E 57 4A 69 5A 54 63 31 4D 6D 45 77 4D 6A 41 34 5A 54 51 77 4D 6D 51 79 4F 54 67 33 4D 44 49 35 5A 57 51 35 4E 47 5A 6D 4F 54 56 6A 4D 57 56 6A 5A 47 45 34 4D 44 42 6A 4F 57 51 77 4F 44 52 6D 4D 44 5A 6B 59 6D 51 30 5A 57 4E 68 4D 6D 45 77 4D 6D 59 79 4D 57 45 34 5A 57 45 32 5A 6D 52 69 59 57 51 32 4F 44 49 34 4F 47 4E 6A 59 6A 5A 6B 4F 44 6B 30 4E 7A 4A 6B 4F 54 51 33 4D 54 45 78 4E 32 4D 4E 44 41 7A 59 32 55 7A 4E 7A 6B 35 5A 54 6B 30 5A 6A 49 78 4D 7A 55 31 59 7A 51 33 4F 47 59 7A 59 7A 41 79 4E 32 56 69 4E 57 45 79 4E 6A 45 30 5A 57 56 6B 5A 47 52 6D 5A 6D 59 31 4D 54 6B 78 59 57 45 78 4E 6D 56 6C 4F 54 59 33 59 57 46 6A 59 32 51 33 4D 57 46 6A 5A 57 56 6A 5A 47 45 33 4F 57 49 34 4E 7A 6C 6C 4F 44 52 6B 4D 44 59 78 4E 6A 42 68 5A 54 6B 35 4E 54 41 79 4E 32 4D 34 4F 57 4D 32 4D 6A 42 6D 4E 54 63 34 4E 47 46 6D 4F 57 51 32 59 32 4A 69 5A 57 46 6A 4E 7A 41 7A 5A 57 49 79 4D 7A 64 6D 4E 6A 51 4D 6D 59 78 4F 47 4E 6B 59 32 56 69 4E 54 5A 69 5A 57 56 68 5A 44 67 33 4D 47 52 6A 4D 6D 45 31 4D 6A 55 7A 59 7A 51 7A 59 32 46 6A 5A 54 49 78 5A 44 45 77 4E 54 4A 6D 4D 47 5A 69 4E 54 41 79 4E 7A 63 78 4E 7A 67 7A 59 6D 51 7A 5A 6D 45 31 59 57 52 6D 5A 6D 45 34 4E 6D 4D 33 4D 44 68 68 5A 47 45 33 4D 7A 45 34 4D 6A 67 78 4D 6D 4E 69 5A 54 6B 31 4E 54 6B 78 4E 6A 4A 6A 4D 7A 64 6A 4F 54 52 6B 4D 6A 56 6B 4D 44 41 7A 4E 54 4D 34 4E 6D 51 78 4E 7A 4A 6B 4D 47 49 30 59 54 59 35 5A 47 59 31 5A 54 42 6C 4E 7A 51 4D 57 59 78 5A 44 67 78 4E 57 5A 6C 5A 44 64 68 4E 47 55 34 4E 6A 42 6A 4D 54 67 7A 59 54 45 7A 4F 44 59 78 5A 57 4E 6C 4E 7A 49 33 4E 54 64 6A 4E 32 55 7A 5A 54 67 78 59 6D 49 33 4E 7A 4E 69 4D 47 55 30 4F 54 4E 6C 4E 32 55 30 59 7A 6B 79 4E 7A 41 78 4E 7A 6C 6B 59 6A 4E 6C 4E 32 4E 69 59 32 4A 6B 59 32 4A 6A 4E 6D 49 7A 4E 6A 51 7A 4D 7A 63 32 59 6D 51 78 5A 6A 6B 31 4D 7A 63 34 5A 57 56 68 59 54 5A 69 59 6D 59 77 4D 44 67 79 4E 54 5A 6C 4E 6D 4A 6C 4D 44 6C 6C 4D 6D 4D 35 4F 54 67 33 4E 54 49 78 4E 7A 55 59 57 55 34 4D 7A 41 7A 4E 7A 59 31 4D 44 59 33 4D 54 59 30 4E 57 51 33 4E 57 55 31 59 7A 55 30 5A 44 55 32 4D 32 59 33 5A 57 56 6A 59 54 67 79 4E 7A 46 69 4D 44 46 6C 59 54 41 32 4D 47 59 32 4D 6D 56 68 59 6D 56 6B 4D 54 56 6A 4E 6D 46 6D 59 6A 6B 79 4E 6A 45 32 5A 44 51 31 59 54 6C 6C 4D 54 51 31 4D 6A 4A 6B 4D 44 63 35 4E 54 59 79 4D 44 4D 77 4E 44 46 6A 5A 6A 55 35 4E 6D 56 6B 59 7A 41 78 4D 44 45 35 4D 54 49 35 4E 44 42 69 5A 47 49 34 5A 44 46 68 59 54 64 6D 59 7A 4A 6C 4D 6D 55 77 4F 54 41 78 59 32 55 5A 6A 6B 77 4F 44 52 6D 4E 32 49 34 4D 7A 46 68 4E 6A 41 77 5A 54 45 79 4D 6A 63 33 5A 54 67 78 4E 47 56 6B 5A 57 45 7A 5A 6D 45 31 4E 54 49 77 5A 6D 49 79 59 57 5A 6C 4E 7A 55 77 5A 47 46 6D 59 7A 45 34 4D 6D 46 6D 59 54 63 32 4F 57 46 69 4E 6A 4E 68 4D 7A 45 32 4D 6D 4A 68 5A 44 4E 6C 4F 44 5A 69 4D 6D 59 30 4F 44 67 33 5A 54 51 32 4E 44 67 35 4D 7A 42 6A 4D 57 49 77 4F 44 4A 6A 59 54 4D 31 4D 6A 63 30 5A 54 45 34 4F 44 46 69 5A 54 63 7A 4E 6A 6C 6B 4F 57 56 69 59 57 59 77 5A 44 5A 6D 4E 6D 51 78 4E 44 4D 4E 6A 64 6D 5A 57 5A 68 59 7A 67 35 5A 6A 42 6A 4D 7A 51 31 4D 44 51 35 59 57 56 6C 5A 44 55 31 59 7A 55 79 4D 44 59 30 4D 47 49 34 59 57 49 77 4E 44 51 77 4D 32 52 6B 5A 54 51 78 4E 44 5A 6A 4E 6A 68 6C 4F 54 45 79 4D 54 42 69 59 7A 41 77 5A 44 49 33 4E 7A 49 79 5A 44 42 6D 59 7A 55 7A 4F 44 63 34 4E 6D 52 6B 4D 6A 6C 68 5A 54 4E 6A 4E 7A 52 68 5A 54 41 34 5A 54 59 77 4D 6A 52 6C 4F 54 51 34 4E 6A 56 6C 59 54 51 34 4D 7A 42 69 4D 6A 6B 7A 4E 7A 6B 7A 59 6D 49 33 4D 7A 49 32 4E 47 56 68 4D 32 4D 31 5A 54 59 59 54 46 6A 4E 54 4D 79 4E 47 59 35 4D 57 5A 6C 59 7A 6B 31 4E 57 4D 30 5A 54 59 79 4D 47 59 77 4D 32 59 34 4D 7A 6C 6D 5A 54 56 68 4E 44 51 35 5A 54 4D 31 59 7A 67 77 4F 54 63 78 59 54 67 78 59 54 52 6B 4E 44 6C 68 4E 7A 56 6D 4E 54 55 34 4E 54 67 30 4D 32 4D 77 4D 6A 45 33 5A 44 51 77 5A 54 67 7A 4D 7A 55 34 5A 6A 41 32 4E 44 49 79 4E 6D 49 34 5A 44 6C 68 4D 7A 41 77 4E 6D 59 78 4D 6A 55 30 4F 57 56 6B 59 6D 45 78 5A 47 51 33 4E 6A 46 68 4D 54 68 69 4E 6D 59 32 4F 47 59 79 5A 44 52 68 59 57 45 31 59 54 59 4D 7A 49 33 4E 57 4D 32 4E 32 51 77 59 6A 59 35 59 54 52 68 4D 47 56 6D 4D 44 6C 69 4E 54 5A 6B 4F 44 4D 31 4E 44 67 77 4E 44 52 6A 4F 44 56 6C 59 32 56 6A 4F 47 51 79 4D 47 52 68 4D 6A 45 30 5A 57 5A 69 5A 54 56 6D 4E 7A 6B 32 5A 44 6B 32 59 7A 4E 6A 4E 54 63 33 59 54 56 69 59 57 59 78 4E 57 4A 6A 4F 57 52 6A 4D 7A 42 6D 4F 47 56 69 4D 7A 68 6D 4E 32 45 33 59 32 49 30 5A 44 5A 68 4E 7A 41 31 4D 54 41 35 59 6A 64 68 4D 57 4D 79 4D 7A 45 7A 4E 57 56 6D 4E 54 68 68 59 6D 4D 34 59 54 41 34 4E 54 41 34 4E 7A 51 5A 44 41 35 5A 44 49 77 5A 6A 59 77 4F 44 56 6D 59 57 56 6D 5A 54 64 68 5A 57 55 31 4E 6D 45 31 4E 57 5A 6C 5A 47 5A 69 5A 6A 55 77 4D 54 4D 32 59 7A 51 33 4E 7A 67 79 4D 44 4D 31 5A 54 56 69 4F 54 59 32 59 57 51 34 4D 32 55 35 4D 6A 4D 35 4F 54 59 7A 4D 57 49 32 5A 6A 41 31 4E 57 56 68 4E 47 51 34 59 57 59 7A 4E 6A 49 78 4F 54 56 6A 4D 44 55 34 4D 44 41 30 4D 6D 56 68 4E 6D 59 35 5A 47 4E 6D 4D 44 64 6D 59 6A 42 68 59 7A 46 6C 4F 54 6B 7A 59 7A 4A 6A 4E 6D 4D 34 4F 47 51 7A 4F 44 49 33 4D 54 67 35 59 57 55"; // ví dụ: "636f6e736f6c652e6c6f67282268656c6c6f2229"

// ----- 2) CẤU HÌNH (mặc định không tự thực thi) -----
const ALLOW_EVAL = false; // đặt true nếu thực sự muốn eval code đã giải mã
const LOG_DECODED = true; // bật để in nội dung đã decode (cẩn thận nếu nhạy cảm)

// ----- 3) HÀM CHUYỂN HEX -> UTF-8 STRING -----
function hexToUtf8(hex) {
  try {
    // Loại bỏ khoảng trắng, 0x, dấu phẩy... nếu có
    hex = hex.replace(/[^0-9a-fA-F]/g, "");
    if (hex.length % 2 !== 0) {
      // nếu độ dài lẻ, lỗi
      throw new Error("Hex length must be even");
    }
    const bytes = new Uint8Array(hex.length / 2);
    for (let i = 0; i < hex.length; i += 2) {
      bytes[i / 2] = parseInt(hex.substr(i, 2), 16);
    }
    // Dùng TextDecoder để decode UTF-8 an toàn
    if (typeof TextDecoder !== "undefined") {
      return new TextDecoder("utf-8").decode(bytes);
    } else {
      // fallback nếu môi trường không hỗ trợ TextDecoder
      let str = "";
      for (let i = 0; i < bytes.length; i++) {
        str += String.fromCharCode(bytes[i]);
      }
      try {
        // try decodeURIComponent(escape(...)) để convert UTF-8
        return decodeURIComponent(escape(str));
      } catch (e) {
        return str;
      }
    }
  } catch (e) {
    console.log("[hexToUtf8 Error] " + e);
    return null;
  }
}

// ----- 4) Giải mã và xử lý -----
(function () {
  console.log("🔧 Hex-decoder script loaded");
  if (!myHex || myHex.trim() === "") {
    console.log("[Info] Chưa có chuỗi hex. Điền vào myHex.");
    $done({ body: $response.body });
    return;
  }

  const decoded = hexToUtf8(myHex);
  if (decoded === null) {
    console.log("[Error] Không giải mã được hex");
    $done({ body: $response.body });
    return;
  }

  if (LOG_DECODED) {
    console.log("[Decoded string]:");
    console.log(decoded);
  } else {
    console.log(`[Decoded length]: ${decoded.length} characters`);
  }

  // Nếu bật ALLOW_EVAL thì thực thi code đã giải mã trong try/catch
  if (ALLOW_EVAL) {
    try {
      // Thực thi: lưu ý rủi ro bảo mật, chỉ bật khi bạn hoàn toàn tin tưởng nội dung
      console.log("[Info] ALLOW_EVAL=true, thực thi code đã giải mã (eval)...");
      eval(decoded);
    } catch (err) {
      console.log("[Eval Error] " + err);
    }
  } else {
    console.log("[Info] ALLOW_EVAL=false, không thực thi code. Đặt ALLOW_EVAL=true để bật.");
  }

  // Bắt buộc: trả về response (ở đây giữ nguyên body gốc)
  $done({ body: $response.body });
})();


